# IaC Starter pipeline

trigger:
  branches:
    include:
    - master
    exclude:
    - user/*

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build job
    pool:
      name: 'Hosted Ubuntu 1604'
    steps:
    - task: PublishPipelineArtifact@0
      inputs:
        targetPath: 'tf'
        artifactName: 'terraform'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Deploy job
    environment: test
    pool:
      name: 'Hosted Ubuntu 1604'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@1
            inputs:
              artifactName: 'terraform'
              downloadPath: '$(System.ArtifactsDirectory)/terraform'

          - task: AzureCLI@1
            inputs:
              # Change here if you changed name for Service Connection
              azureSubscription: 'serviceprincipal'
              scriptLocation: 'inlineScript'
              addSpnToEnvironment: true
              inlineScript: |
                ACCESS_KEY=`az storage account keys list -n $(TF_STG_NAME) -o json | jq -r ''.[0].value''`
                TENANT_ID=`az account show -o json | jq -r ''.tenantId''`
                SUBSCRIPTION_ID=`az account show -o json | jq -r ''.id''`
                echo "##vso[task.setvariable variable=accessKey]$ACCESS_KEY"
                echo "##vso[task.setvariable variable=ARM_TENANT_ID]$TENANT_ID"
                echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID]$SUBSCRIPTION_ID"
                echo "##vso[task.setvariable variable=ARM_CLIENT_ID]$servicePrincipalId"
                echo "##vso[task.setvariable variable=ARM_CLIENT_SECRET]$servicePrincipalKey"
            displayName: 'Retrieve credentials'

          - script: |
              terraform init -backend-config=resource_group_name=statetf -backend-config=storage_account_name=$(TF_STG_NAME) -backend-config=container_name=state -backend-config=key=$(TF_STG_KEY) -backend-config=access_key=$(accessKey) -no-color -input=false
              terraform plan -var aks_sp_client_id=$(ARM_CLIENT_ID) -var aks_sp_client_secret=$(ARM_CLIENT_SECRET) -no-color -input=false
              terraform apply -var aks_sp_client_id=$(ARM_CLIENT_ID) -var aks_sp_client_secret=$(ARM_CLIENT_SECRET) -auto-approve
            displayName: 'Terraform Init, Plan and Apply'
            workingDirectory: '$(System.ArtifactsDirectory)/terraform'

          - task: AzureCLI@1
            inputs:
              azureSubscription: 'terraformPipelineSP'
              scriptLocation: 'scriptPath'
              scriptPath: '$(System.ArtifactsDirectory)/terraform/helm-keda-aadpodid-install.sh'
              workingDirectory: '$(System.ArtifactsDirectory)/terraform'
            displayName: 'Installing Helm, KEDA, AAD Pod Identity components'
